// Generated by view binder compiler. Do not edit!
package org.tensorflow.lite.examples.soundclassifier.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.motion.widget.MotionLayout;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.tensorflow.lite.examples.soundclassifier.R;

public final class ActivitySubactivityBinding implements ViewBinding {
  @NonNull
  private final MotionLayout rootView;

  @NonNull
  public final AppCompatButton btnMove;

  @NonNull
  public final Button button6;

  @NonNull
  public final Button button7;

  @NonNull
  public final MotionLayout linearLayout;

  private ActivitySubactivityBinding(@NonNull MotionLayout rootView,
      @NonNull AppCompatButton btnMove, @NonNull Button button6, @NonNull Button button7,
      @NonNull MotionLayout linearLayout) {
    this.rootView = rootView;
    this.btnMove = btnMove;
    this.button6 = button6;
    this.button7 = button7;
    this.linearLayout = linearLayout;
  }

  @Override
  @NonNull
  public MotionLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySubactivityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySubactivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_subactivity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySubactivityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_move;
      AppCompatButton btnMove = rootView.findViewById(id);
      if (btnMove == null) {
        break missingId;
      }

      id = R.id.button6;
      Button button6 = rootView.findViewById(id);
      if (button6 == null) {
        break missingId;
      }

      id = R.id.button7;
      Button button7 = rootView.findViewById(id);
      if (button7 == null) {
        break missingId;
      }

      MotionLayout linearLayout = (MotionLayout) rootView;

      return new ActivitySubactivityBinding((MotionLayout) rootView, btnMove, button6, button7,
          linearLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
